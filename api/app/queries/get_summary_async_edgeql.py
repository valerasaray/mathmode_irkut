# AUTOGENERATED FROM 'app/queries/get_summary.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetSummaryResultItem(NoPydanticValidation):
    id: uuid.UUID
    title: str


@dataclasses.dataclass
class GetSummaryResultItem02(NoPydanticValidation):
    id: uuid.UUID
    priority: GetSummaryResultItem02Priority | None


@dataclasses.dataclass
class GetSummaryResultItem02Priority(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem03(NoPydanticValidation):
    id: uuid.UUID
    realiser: GetSummaryResultItem03Realiser | None


@dataclasses.dataclass
class GetSummaryResultItem03Realiser(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem04(NoPydanticValidation):
    id: uuid.UUID
    realiserGroup: GetSummaryResultItem04realiserGroup | None


@dataclasses.dataclass
class GetSummaryResultItem04realiserGroup(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem05(NoPydanticValidation):
    id: uuid.UUID
    passport_ref: str | None


@dataclasses.dataclass
class GetSummaryResultItem06(NoPydanticValidation):
    id: uuid.UUID
    processType: GetSummaryResultItem06processType | None


@dataclasses.dataclass
class GetSummaryResultItem06processType(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem07(NoPydanticValidation):
    id: uuid.UUID
    title: str


@dataclasses.dataclass
class GetSummaryResultItem08(NoPydanticValidation):
    id: uuid.UUID
    assigned: list[GetSummaryResultItem04realiserGroup]


@dataclasses.dataclass
class GetSummaryResultItem09(NoPydanticValidation):
    id: uuid.UUID
    status: GetSummaryResultItem09Status | None


@dataclasses.dataclass
class GetSummaryResultItem09Status(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem10(NoPydanticValidation):
    id: uuid.UUID
    receipt: datetime.datetime | None


@dataclasses.dataclass
class GetSummaryResultItem11(NoPydanticValidation):
    id: uuid.UUID
    title: str


@dataclasses.dataclass
class GetSummaryResultItem12(NoPydanticValidation):
    id: uuid.UUID
    fit: GetSummaryResultItem03Realiser | None


@dataclasses.dataclass
class GetSummaryResultItem13(NoPydanticValidation):
    id: uuid.UUID
    start_verification: datetime.datetime | None


@dataclasses.dataclass
class GetSummaryResultItem14(NoPydanticValidation):
    id: uuid.UUID
    comments: list[GetSummaryResultItem14CommentsItem]


@dataclasses.dataclass
class GetSummaryResultItem14CommentsItem(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetSummaryResultItem15(NoPydanticValidation):
    id: uuid.UUID
    end_verification: datetime.datetime | None


@dataclasses.dataclass
class GetSummaryResultItem16(NoPydanticValidation):
    id: uuid.UUID
    end_correction: datetime.datetime | None


@dataclasses.dataclass
class GetSummaryResultItem17(NoPydanticValidation):
    id: uuid.UUID
    main: bool | None


async def get_summary(
    executor: edgedb.AsyncIOExecutor,
    *,
    login: str,
) -> list[tuple[GetSummaryResultItem, GetSummaryResultItem02, GetSummaryResultItem03, GetSummaryResultItem04, GetSummaryResultItem05, GetSummaryResultItem06, GetSummaryResultItem07, GetSummaryResultItem08, GetSummaryResultItem09, GetSummaryResultItem10, GetSummaryResultItem11, GetSummaryResultItem12, GetSummaryResultItem13, GetSummaryResultItem14, GetSummaryResultItem15, GetSummaryResultItem16, GetSummaryResultItem17]]:
    return await executor.query(
        """\
        with login := <str>$login,
          group_assigned := (
            select Department filter (.boss.login = login or .staff.login = login)
          )

        for subnode in (select SubNode) union (
          for node in (select Node filter .subs = subnode) union (
            for process in (select Process filter .nodes = node) union (
              (select process {title}),
              (select process {priority}),
              (select process {realiser}),
              (select process {realiserGroup}),

              (select process {passport_ref}),
              (select process {processType}),

              (select node {title}),
              (select node {assigned}),
              (select node {status}),
              (select node {receipt}),

              (select subnode {title}),
              (select subnode {fit}),
              (select subnode {start_verification}),
              (select subnode {comments}),
              (select subnode {end_verification}),
              (select subnode {end_correction}),
              (select subnode {main}),
            )
          )
        )\
        """,
        login=login,
    )
