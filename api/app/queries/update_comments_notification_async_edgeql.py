# AUTOGENERATED FROM 'app/queries/update_comments_notification.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateCommentsNotificationResult(NoPydanticValidation):
    id: uuid.UUID
    comment: UpdateCommentsNotificationResultComment | None


@dataclasses.dataclass
class UpdateCommentsNotificationResultComment(NoPydanticValidation):
    id: uuid.UUID
    author: UpdateCommentsNotificationResultCommentAuthor | None
    text_str: str
    answer: str | None


@dataclasses.dataclass
class UpdateCommentsNotificationResultCommentAuthor(NoPydanticValidation):
    id: uuid.UUID
    login: str


async def update_comments_notification(
    executor: edgedb.AsyncIOExecutor,
    *,
    login: str,
    answer: str,
    comment_id: uuid.UUID,
) -> UpdateCommentsNotificationResult:
    return await executor.query_single(
        """\
        with login := <str>$login,
          user := (select User filter .login = login),
          answer := <str>$answer,
          comment_id := <uuid>$comment_id,
          comment := (select Comment filter .id = comment_id),
          subnode := (select SubNode filter .comments = comment),
          node := (select Node filter .subs = subnode),
          process := (select Process filter .nodes = node),

        select (
          insert Notification {
            comment := (
                update Comment
                filter (.id = comment_id and process.realiser = user)
                set {
                  answer := answer,
                }
            ),
            user_to := comment.author,
          }  
        ) {id, comment: {id, author: {login}, text_str, answer}};\
        """,
        login=login,
        answer=answer,
        comment_id=comment_id,
    )
